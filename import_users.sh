#!/usr/bin/env bash
set -euo pipefail

# === Config ===
DB_URL='postgresql://neondb_owner:npg_PcMCkNw46zDH@ep-icy-wave-aes2cab9.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require'
CSV_PATH='backup_users_20250923_011443.csv'   # ajusta si estÃ¡ en otra carpeta
CSV_HAS_ID='yes'  # "yes" si la 1a columna del CSV es id; "no" si no trae id

echo "ðŸ”— Probando conexiÃ³n a PRODâ€¦"
psql "$DB_URL" -Atc "select current_catalog, current_schema, session_user;"

echo "ðŸ§± Asegurando tabla usersâ€¦"
psql "$DB_URL" -c "
CREATE TABLE IF NOT EXISTS public.users (
  id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  email         text NOT NULL UNIQUE,
  password_hash text NOT NULL,
  role          text NOT NULL,
  full_name     text,
  is_active     boolean NOT NULL DEFAULT true,
  created_at    timestamptz NOT NULL DEFAULT now(),
  updated_at    timestamptz NOT NULL DEFAULT now(),
  last_login_at timestamptz
);"

echo "ðŸ§¹ Limpiando tabla users (TRUNCATE + restart identity)â€¦"
psql "$DB_URL" -c "TRUNCATE public.users RESTART IDENTITY CASCADE;"

echo "ðŸ“¥ Importando CSV â†’ usersâ€¦"
if [ "$CSV_HAS_ID" = "yes" ]; then
  psql "$DB_URL" -c "\copy public.users(
    id, email, password_hash, role, full_name, is_active, created_at, updated_at, last_login_at
  ) FROM '$CSV_PATH' WITH (FORMAT csv, HEADER true, ENCODING 'UTF8')"
else
  psql "$DB_URL" -c "\copy public.users(
    email, password_hash, role, full_name, is_active, created_at, updated_at, last_login_at
  ) FROM '$CSV_PATH' WITH (FORMAT csv, HEADER true, ENCODING 'UTF8')"
fi

echo "ðŸ”§ Ajustando contador de IDsâ€¦"
psql "$DB_URL" -c "
SELECT setval(
  pg_get_serial_sequence('public.users','id'),
  COALESCE((SELECT MAX(id) FROM public.users),0)+1, true
);"

echo "âœ… Verificandoâ€¦"
psql "$DB_URL" -c "SELECT COUNT(*) AS rows, MIN(id), MAX(id) FROM public.users;"
psql "$DB_URL" -c "SELECT id, email, role, is_active, created_at FROM public.users ORDER BY id FETCH FIRST 5 ROWS ONLY;"
echo "ðŸŽ‰ Listo."
